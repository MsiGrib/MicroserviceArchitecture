services:
  postgres:
    image: postgres:18
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    mem_limit: 1024m
    cpu_quota: 60000
    cpu_period: 100000

  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_CLUSTER_ID: "cluster-1"
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - ./kafka_data:/var/lib/kafka/data
    networks:
      - app_network
    mem_limit: 1024m
    cpu_quota: 60000
    cpu_period: 100000

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - app_network
    mem_limit: 512m
    cpu_quota: 60000
    cpu_period: 100000

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - app_network
    mem_limit: 512m
    cpu_quota: 60000
    cpu_period: 100000

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    networks:
      - app_network
    mem_limit: 512m
    cpu_quota: 60000
    cpu_period: 100000

volumes:
  postgres_data:
  kafka_data:
  redis_data:

networks:
  app_network:
    driver: bridge
